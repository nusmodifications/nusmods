// flow-typed signature: 458f8706b63b408175313654bbbd726d
// flow-typed version: <<STUB>>/redux-persist_v5.4.x/flow_v0.61.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'redux-persist'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'redux-persist' {
  declare module.exports: any;

  // Taken from https://github.com/rt2zz/redux-persist/blob/master/src/types.js
  declare export type Transform = {
    in: (Object | string, string) => Object,
    out: (Object | string, string) => Object,
    config?: PersistConfig,
  }

  declare export type PersistState = {
    version: number,
    rehydrated: boolean,
  }

  declare export type PersistedState = {
    _persist: PersistState,
  } | void

  declare export type PersistConfig = {
    version?: number,
    storage: Object,
    key: string,
    keyPrefix?: string, // @TODO remove in v6
    blacklist?: Array<string>,
    whitelist?: Array<string>,
    transforms?: Array<Transform>,
    throttle?: number,
    migrate?: (PersistedState, number) => Promise<PersistedState>,
    stateReconciler?: false | Function,
    getStoredState?: PersistConfig => Promise<PersistedState>, // used for migrations
    debug?: boolean,
    serialize?: boolean,
  }

  declare type RegisterAction = {
    type: 'redux-persist/REGISTER',
    key: string,
  }

  declare export type RehydrateErrorType = any

  declare export type RehydrateAction = {
    type: 'redux-persist/REHYDRATE',
    key: string,
    payload: ?Object,
    err: ?RehydrateErrorType,
  }

  declare type PersistorAction = RehydrateAction | RegisterAction

  declare type PersistorState = {
    registry: Array<string>,
    bootstrapped: boolean,
  }

  declare type PersistorSubscribeCallback = () => any

  declare export type Persistor = {
    purge: () => Promise<any>,
    flush: () => Promise<any>,
    +dispatch: PersistorAction => PersistorAction,
    +getState: () => PersistorState,
    +subscribe: PersistorSubscribeCallback => () => any,
  }
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'redux-persist/es/constants' {
  declare module.exports: any;
}

declare module 'redux-persist/es/createMigrate' {
  declare module.exports: any;
}

declare module 'redux-persist/es/createPersistoid' {
  declare module.exports: any;
}

declare module 'redux-persist/es/createTransform' {
  declare module.exports: any;
}

declare module 'redux-persist/es/getStoredState' {
  declare module.exports: any;
}

declare module 'redux-persist/es' {
  declare module.exports: any;
}

declare module 'redux-persist/es/integration/getStoredStateMigrateV4' {
  declare module.exports: any;
}

declare module 'redux-persist/es/integration/react' {
  declare module.exports: any;
}

declare module 'redux-persist/es/persistCombineReducers' {
  declare module.exports: any;
}

declare module 'redux-persist/es/persistReducer' {
  declare module.exports: any;
}

declare module 'redux-persist/es/persistStore' {
  declare module.exports: any;
}

declare module 'redux-persist/es/purgeStoredState' {
  declare module.exports: any;
}

declare module 'redux-persist/es/stateReconciler/autoMergeLevel1' {
  declare module.exports: any;
}

declare module 'redux-persist/es/stateReconciler/autoMergeLevel2' {
  declare module.exports: any;
}

declare module 'redux-persist/es/stateReconciler/hardSet' {
  declare module.exports: any;
}

declare module 'redux-persist/es/storage/createWebStorage' {
  declare module.exports: any;
}

declare module 'redux-persist/es/storage/getStorage' {
  declare module.exports: any;
}

declare module 'redux-persist/es/storage' {
  declare module.exports: any;
}

declare module 'redux-persist/es/storage/index.native' {
  declare module.exports: any;
}

declare module 'redux-persist/es/storage/session' {
  declare module.exports: any;
}

declare module 'redux-persist/es/types' {
  declare module.exports: any;
}

declare module 'redux-persist/es/utils/curry' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/constants' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/createMigrate' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/createPersistoid' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/createTransform' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/getStoredState' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/index' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/integration/getStoredStateMigrateV4' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/integration/react' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/persistCombineReducers' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/persistReducer' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/persistStore' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/purgeStoredState' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/stateReconciler/autoMergeLevel1' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/stateReconciler/autoMergeLevel2' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/stateReconciler/hardSet' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/storage/createWebStorage' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/storage/getStorage' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/storage' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/storage/index.native' {
  declare module.exports: any;
}

declare module 'redux-persist/lib/storage/session' {
  declare module.exports: any;
}
