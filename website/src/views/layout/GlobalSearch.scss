@import './nav-constants';

$results-width-open: 21rem;
$dropdown-height: 40rem;
$icon-horizontal-padding: ($container-height - $navbar-icon-size) / 2;

.container {
  composes: btn-svg from global;
  position: relative;
  width: 100%;
  max-width: $results-width-open;
  margin: $container-vertical-margin $container-horizontal-margin;
}

.icon {
  width: $navbar-icon-size;
  height: $navbar-icon-size;
  margin: 0 $icon-horizontal-padding;
  color: var(--gray-mid);
}

.input {
  // Extend input to the left of icon so that the icon is clickable.
  $overhang: $navbar-icon-size + $icon-horizontal-padding * 2;

  padding-left: $overhang;
  margin-left: -$overhang;
  border-radius: $corner-radius;
  font-size: $font-size-s;
  background: transparent;

  &:focus {
    background: transparent;
  }
}

.selectListContainer {
  right: 0;
  left: auto;
  width: $results-width-open;
  padding: 0; // Don't interfere with child .selectList's padding
  margin-top: $container-vertical-margin;
  font-size: $font-size-sm;
  color: var(--body-color);
}

.selectList {
  composes: scrollable-y from global;
  // Prevent dropdown (including its bottom shadow) from going below the screen's bottom edge.
  // Use Min instead of min to use CSS's min instead of Sass's, which doesn't
  // accept a calc-ed value as a parameter.
  // See: https://css-tricks.com/when-sass-and-new-css-features-collide/#the-solution
  // stylelint-disable-next-line function-name-case
  max-height: Min(calc(100vh - #{$navbar-height} - 6px), $dropdown-height);
  padding: 0 0.4rem 0.4rem 0.4rem;

  :global(.dropdown-divider) {
    margin-bottom: 0.1rem;
  }
}

.selectHeader {
  position: sticky;
  top: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.4rem 0 0.4rem 0.75rem;
  font-size: 0.95rem;
  background-color: var(--body-bg);
}

.headerAction {
  composes: dropdown-item from global;
  width: unset;

  &.selected {
    > :global(.btn-svg) {
      color: theme-color();
    }

    .svg {
      transform: translateX(0.2rem);
    }
  }
}

.headerTitle {
  display: flex;
  align-items: center;

  .headerName {
    font-weight: bold;
  }

  .headerIcon {
    width: 1.1rem;
    height: 1.1rem;
    margin-right: 0.4rem;
  }
}

.svg {
  width: 1.1rem;
  height: 1.1rem;
  transition: $entering-duration transform $material-standard-curve;
}

.option {
  composes: dropdown-item from global;

  .title {
    white-space: break-spaces;
  }
}

.semesters {
  composes: dropdown-item-right-content from global;
  flex: 0 0 auto;
}

.selected {
  background-color: var(--gray-lightest);
}

.noResults {
  text-align: center;

  p {
    margin-bottom: 0.4rem;
  }

  svg {
    opacity: 0.35;
    width: 4rem;
    height: 4rem;
    margin-top: 1rem;
  }

  :global(.btn).selected {
    text-decoration: underline;
  }
}

.searchTerm {
  composes: h4 from global;
  display: block;
  white-space: normal;
}
